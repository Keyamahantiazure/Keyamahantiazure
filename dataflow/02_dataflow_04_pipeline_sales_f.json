{
	"name": "02_dataflow_04_pipeline_sales_f",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "SalesOrderHeaderstream"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "SalesOrderDetailstream"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable",
						"type": "DatasetReference"
					},
					"name": "tgtlookptablestream"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable",
						"type": "DatasetReference"
					},
					"name": "getmaxskfromtgt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable",
						"type": "DatasetReference"
					},
					"name": "sinktgt"
				},
				{
					"name": "cachesink"
				}
			],
			"transformations": [
				{
					"name": "joinertransformance"
				},
				{
					"name": "selectcolumns"
				},
				{
					"name": "salesskcolumn"
				},
				{
					"name": "exists1"
				},
				{
					"name": "derivedColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderHeaderstream",
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderDetailstream",
				"source(output(",
				"          salessk as integer,",
				"          salesorderid as integer,",
				"          ORDERDATE as timestamp,",
				"          STATUS as integer,",
				"          SALESORDERNUMBER as string,",
				"          PURCHASEORDERNUMBER as string,",
				"          ACCOUNTNUMBER as string,",
				"          customerid as integer,",
				"          orderqty as integer,",
				"          productid as integer,",
				"          unitprice as decimal(19,4),",
				"          totalamount as decimal(19,4),",
				"          rowguid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> tgtlookptablestream",
				"source(output(",
				"          salessk as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT MAX([salessk]) as salessk FROM [dbo].[wc_sales_f]',",
				"     format: 'query',",
				"     staged: true) ~> getmaxskfromtgt",
				"SalesOrderHeaderstream, SalesOrderDetailstream join(SalesOrderHeaderstream@SalesOrderID == SalesOrderDetailstream@SalesOrderID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinertransformance",
				"exists1 select(mapColumn(",
				"          SalesOrderID = SalesOrderHeaderstream@SalesOrderID,",
				"          OrderDate,",
				"          Status,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          CustomerID,",
				"          OrderQty,",
				"          ProductID,",
				"          UnitPrice,",
				"          rowguid = SalesOrderDetailstream@rowguid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectcolumns",
				"selectcolumns keyGenerate(output(salessk as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> salesskcolumn",
				"joinertransformance, tgtlookptablestream exists(SalesOrderDetailstream@rowguid == tgtlookptablestream@rowguid,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"salesskcolumn derive(Totalamount = multiply(OrderQty,UnitPrice),",
				"          salessk = salessk+iifNull(cachesink#outputs()[1].salessk,0)) ~> derivedColumns",
				"derivedColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          salessk,",
				"          salesorderid = SalesOrderID,",
				"          ORDERDATE = OrderDate,",
				"          STATUS = Status,",
				"          SALESORDERNUMBER = SalesOrderNumber,",
				"          PURCHASEORDERNUMBER = PurchaseOrderNumber,",
				"          ACCOUNTNUMBER = AccountNumber,",
				"          customerid = CustomerID,",
				"          orderqty = OrderQty,",
				"          productid = ProductID,",
				"          unitprice = UnitPrice,",
				"          totalamount = Totalamount,",
				"          rowguid",
				"     )) ~> sinktgt",
				"getmaxskfromtgt sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          salessk",
				"     )) ~> cachesink"
			]
		}
	}
}